[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "brother"
version = "0.0.0"
license = "Apache-2.0"
description = "Python wrapper for getting data from Brother laser and inkjet printers via SNMP."
readme = "README.md"
authors = [{name = "Maciej Bieniek"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Typing :: Typed",
]
requires-python = ">=3.12"
dependencies = [
  "dacite>=1.7.0",
  "pysnmp>=7.1.6"
]

[project.optional-dependencies]
test = [
  "coverage==7.10.6",
  "freezegun==1.5.5",
  "mypy==1.18.1",
  "pytest-asyncio==1.2.0",
  "pytest-cov==7.0.0",
  "pytest-error-for-skips==2.0.2",
  "pytest-timeout==2.4.0",
  "pytest==8.4.2",
  "ruff==0.13.1",
  "syrupy==4.9.1",
]
dev = [
  "pre-commit==4.3.0",
]

[project.urls]
Homepage = "https://github.com/bieniu/brother"

[tool.setuptools.packages.find]
include = ["brother*"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"

[tool.mypy]
python_version = "3.13"
show_error_codes = true
follow_imports = "silent"
ignore_missing_imports = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_return_any = true
warn_unused_ignores = true
warn_unreachable = true

[tool.ruff]
target-version = "py313"

lint.select = ["ALL"]

lint.ignore = [
    "COM812",   # Trailing comma missing
    "D203",     # 1 blank line required before class docstring
    "D213",     # Multi-line docstring summary should start at the second line
    "EM101",    # Exception must not use a string literal, assign to variable first
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments to function call
    "PTH123",   # `open()` should be replaced by `Path.open()`
    "TC002",    # Move third-party import into a type-checking block
    "TC006",    #Add quotes to type expression in `typing.cast()`
    "TRY003",   # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "ASYNC230", # Async functions should not open files with blocking methods like `open`
    "PLR2004",  # Magic value used in comparison
    "S101",     # Use of `assert` detected
    "SLF001",   # Private member accessed
    ]
"example.py" = [
    "T201",      # `print` found
    "PLR2004",   # Magic value used in comparison
]

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.coverage.run]
source = ["brother"]

[tool.tox]
legacy_tox_ini = """

[tox]
envlist = py312, py313, py314, lint, typing, coverage
skip_missing_interpreters = True

[gh-actions]
python =
  3.12: py312, lint, typing, coverage
  3.13: py313
  3.14: py314

[testenv]
commands =
  pytest --timeout=30 --cov=brother --cov-report=xml {posargs} --error-for-skips
deps =
  .[test]

[testenv:lint]
basepython = python3
depends = py312
ignore_errors = True
skip_install = True
usedevelop = False
commands =
  ruff check .
  ruff format --check .

[testenv:typing]
basepython = python3
depends = py312
ignore_errors = True
skip_install = True
usedevelop = False
commands =
  mypy brother

[testenv:coverage]
basepython = python3
depends = py312
skip_install = True
usedevelop = False
commands =
    coverage report --fail-under=79
"""
